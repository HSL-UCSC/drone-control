clear;
clc;
device = serialport("COM5",9600)
flush(device)   
close all

% %% Connect to the Drone via Bluetooth
b = ble("C02824365530"); % Make sure to get the the Drone's MAC address before running this code
joy_c = characteristic(b, "00000000-0001-11E1-9AB4-0002A5D5C51B" , "00008000-0001-11E1-AC36-0002A5D5C51B") % Write w/out response
joy_c_imu = characteristic(b, "00000000-0001-11E1-9AB4-0002A5D5C51B" , "00E00000-0001-11E1-AC36-0002A5D5C51B") % Read IMU
subscribe(joy_c_imu,'notification');
joy_c_imu.DataAvailableFcn = @displayCharacteristicData

% Arm the drone: 
write(joy_c, [22, 128, 0, 128, 128, 0, 4], 'uint8', "WithoutResponse");
java.lang.Thread.sleep(2*1000); % Java sleep is much more accurate than matlab's pause (sleep in ms)


wTimes = [0];
rTimes = [];
startByte = 245;
endByte = 2;
val=0;
count = 0;
readLoop = tic;
global data;
global timestamps;
data = zeros(1000+1,20); % For reading IMU
timestamps = datetime(zeros(10,1), 0, 0); %a 10x1 array of datetime
disp("Starting loop")
global index;
index = 1;
for i=1:500
    loop = tic;
    val = 30+mod(i,10);
    write(device,[245 val val val val 2],"uint8")
%     [data(i,:), timestamps(i)] = read(joy_c_imu, 'latest');
%     java.lang.Thread.sleep(25); % It takes like 100ms to switch from reading something to writing something (limitation of the hardware)
%     read(device,1,"uint8")
%     if(joy_c_imu.NumBytesAvailable >= 20)
%         count = count + 1;
%         [data(i,:), timestamps(i)] = read(joy_c_imu, 'latest');
%         r = toc(readLoop);
%         rTimes(i) = r;
%         readLoop = tic;
%     end


    t = toc(loop);
    wTimes(i) = t;
end

for i=1:50
    write(device,[245 0 0 0 0 2],"uint8")
end



function displayCharacteristicData(src,evt)
    global index;
    global data;
    global timestamps;
    [d,toc] = read(src, 'oldest');
    disp(d);
    disp(t);
    data(index,:) = d;
    timestamps(index) = t;
    index=index+1;
end


